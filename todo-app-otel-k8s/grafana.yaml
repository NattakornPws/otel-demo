apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  labels:
    app: grafana
data:
  grafana.ini: |
    [auth.anonymous]
    # enable anonymous access
    enabled = true

    # specify organization name that should be used for unauthenticated users
    org_name = Main Org.

    # specify role for unauthenticated users
    org_role = Admin
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - editable: true
      isDefault: true
      name: Prometheus
      type: prometheus
      uid: todoapp-metrics
      url: http://prometheus:9090
    - editable: true
      isDefault: false
      name: Jaeger
      type: jaeger
      uid: todoapp-traces
      url: http://jaeger:16686/jaeger/ui
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: false
      editable: true
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards/default
      orgId: 1
      type: file 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:12.1.0
        ports:
        - containerPort: 3000
          name: grafana
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config-volume
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-config-volume
          mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
          subPath: "datasources.yaml"
        - name: grafana-config-volume
          mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
          subPath: "dashboardproviders.yaml"
        - name: dashboards-default
          mountPath: "/var/lib/grafana/dashboards/default"
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-config-volume
        configMap:
          name: grafana-config
      - name: dashboards-default
        configMap:
          name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30095
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:  
  APM_Dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "description": "APM dashboard for monitoring OpenTelemetry-based services.  \n\nInstrument your applications using OpenTelemetry SDKs and send traces, metrics, and logs to Jaeger for traces, a Prometheus-compatible database for metrics, and OpenSearch for logs. This dashboard provides a centralized view of your application's health and performance. ",
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 1,
      "id": 1,
      "links": [],
      "panels": [
        {
          "description": "service.namespace=${service_namespace}, service.name=${service_name}, deployment.environment.name=${deployment_environment_name}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 10,
            "x": 0,
            "y": 0
          },
          "id": 20,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<h1><img src=\"https://opentelemetry.io/img/logos/opentelemetry-logo-nav.png\" alt=\"OpenTelemetry Icon\" width=\"25\" height=\"\"> Service ${service_namespace}/${service_name}</h1>\n",
            "mode": "html"
          },
          "pluginVersion": "12.1.0",
          "title": "",
          "type": "text"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "description": "Shows the timestamp of the latest metrics received in the past 24h.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#24292e",
                "mode": "fixed"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 3,
            "x": 10,
            "y": 0
          },
          "hideTimeOverride": true,
          "id": 39,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Time$/",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "expr": "timestamp(sum by (job) (target_info{job=\"$job\"}) or absent{})\n",
              "interval": "60s",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "timeFrom": "now-24h",
          "title": "Latest metrics received",
          "type": "stat"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 15,
          "panels": [],
          "title": "Server RED Metrics",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "description": "HTTP & RPC endpoints aggregation on the `http.server.request.duration` & `rpc.server.duration` metrics.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration and https://opentelemetry.io/docs/specs/semconv/rpc/rpc-metrics/#metric-rpcserverduration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 0,
            "y": 3
          },
          "id": 17,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "histogram_quantile(\n  0.95,\n  sum by (le, job) (\n    rate(\n      http_server_request_duration_seconds_bucket{        \n        job=\"$job\"\n      }[$__rate_interval]\n    )\n  )\n)\n\nor \n\nhistogram_quantile(\n  0.95,\n  sum by (le, job) (\n    rate(\n      http_server_duration_milliseconds_bucket{        \n        job=\"$job\"\n      }[$__rate_interval]\n    )\n  )\n)\n",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "interval": "60s",
              "legendFormat": "HTTP p95",
              "range": true,
              "refId": "HTTP P95",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "(avg by (job) (\n  rate(\n    http_server_request_duration_seconds_sum{\n      job=\"$job\"\n    }[$__rate_interval]\n  )\n)\n/\navg by (job) (\n  rate(\n    http_server_request_duration_seconds_count{      \n      job=\"$job\"\n    }[$__rate_interval]\n  )\n))\n\nor \n\n(avg by (job) (\n  rate(\n    http_server_duration_milliseconds_sum{\n      job=\"$job\"\n    }[$__rate_interval]\n  )\n)\n/\navg by (job) (\n  rate(\n    http_server_duration_milliseconds_count{      \n      job=\"$job\"\n    }[$__rate_interval]\n  )\n))",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "60s",
              "legendFormat": "HTTP avg",
              "range": true,
              "refId": "HTTP AVG",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "expr": "histogram_quantile(\n  0.95,\n  sum by (le, job) (\n    rate(\n      rpc_server_duration_milliseconds_bucket{\n        job=\"$job\"\n      }[$__rate_interval]\n    ) / 1000\n  )\n)",
              "hide": false,
              "instant": false,
              "interval": "60",
              "legendFormat": "RPC p95",
              "range": true,
              "refId": "RPC P95"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "expr": "avg by (job) (\n  rate(\n    rpc_server_duration_milliseconds_sum{\n      job=\"$job\"\n    }[$__rate_interval]\n  ) / 1000\n)\n/\navg by (job) (\n  rate(\n    rpc_server_duration_milliseconds_count{\n      job=\"$job\"\n    }[$__rate_interval]\n  )\n)",
              "hide": false,
              "instant": false,
              "interval": "60",
              "legendFormat": "RPC avg",
              "range": true,
              "refId": "RPC AVG"
            }
          ],
          "title": "Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "description": "HTTP and RPC endpoints aggregation on the `http.server.request.duration` and `rpc.server.duration` metrics. \n\nErrors are identified by : \n* `http.response.status_code=~\"5..\"`\n* `rpc.grpc.status_code!=\"0\"`\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration\n",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMax": 100,
                "axisSoftMin": 0,
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "noValue": "No HTTP or RPC operation",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 8,
            "y": 3
          },
          "id": 18,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "((\n    (sum by(job) (rate(http_server_request_duration_seconds_count{job=\"$job\", http_response_status_code=~\"5..\"}[$__rate_interval])) * 100) \n    / \n    sum by(job) (rate(http_server_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]))\n)\nor\n(\n    0\n    * \n    sum by(job) (rate(http_server_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]))\n))\n\nor \n\n((\n    (sum by(job) (rate(http_server_duration_milliseconds_count{job=\"$job\", http_status_code=~\"5..\"}[$__rate_interval])) * 100) \n    / \n    sum by(job) (rate(http_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]))\n)\nor\n(\n    0\n    * \n    sum by(job) (rate(http_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]))\n))",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "60s",
              "legendFormat": "HTTP 5xx errors",
              "range": true,
              "refId": "HTTP 5xx",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "expr": "((sum without (rpc_grpc_status_code, instance) (rate(rpc_server_duration_milliseconds_count{job=\"$job\", rpc_grpc_status_code!=\"0\"}[$__rate_interval])) * 100) / sum without (rpc_grpc_status_code, instance) (rate(rpc_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval])))\nor\n(0 * sum without (rpc_grpc_status_code, instance) (rate(rpc_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval])))",
              "hide": false,
              "instant": false,
              "interval": "60",
              "legendFormat": "RPC errors",
              "range": true,
              "refId": "RPC Err"
            }
          ],
          "title": "Error",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "description": "HTTP & RPC endpoints aggregation on the `http.server.request.duration` & `rpc.server.duration` metrics.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 10,
                  "type": "log"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "reqps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 16,
            "y": 3
          },
          "id": 19,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "(sum(rate(http_server_request_duration_seconds_count{job=\"$job\"}[$__rate_interval])) by (job)) or (sum(rate(http_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval])) by (job)) ",
              "hide": false,
              "instant": false,
              "interval": "60s",
              "legendFormat": "HTTP requests",
              "range": true,
              "refId": "HTTP RPS"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "expr": "(sum(rate(rpc_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval])) by (job)) * $__interval_ms / 1000",
              "hide": false,
              "instant": false,
              "interval": "60",
              "legendFormat": "RPC requests",
              "range": true,
              "refId": "RPC RPS"
            }
          ],
          "title": "Request Rate",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "description": "Inbound HTTP operations of the service (aka HTTP endpoints) based on the `http.server.request.duration` metric.\n\nErrors are identified by `http.response.status_code=~\"5..\"`.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "noValue": "No HTTP operation",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration (p99)"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Rate"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "reqps"
                  },
                  {
                    "id": "custom.width",
                    "value": 219
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Error"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percentunit"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 21,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Duration (p99)"
              }
            ]
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by (operation) (\n    label_join(\n            rate(http_server_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]),\n            \"operation\",\n            \" \",\n            \"http_request_method\",\n            \"http_route\"\n    )\n)\n\nor\n\nsum by (operation) (\n    label_join(\n            rate(http_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]),\n            \"operation\",\n            \" \",\n            \"http_method\",\n            \"http_route\"\n    )\n)",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "interval": "60s",
              "legendFormat": "{{operation}}",
              "range": true,
              "refId": "RPS",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "expr": "(\n        sum by (operation) (\n            label_join(\n                rate(http_server_request_duration_seconds_count{job=\"$job\", http_response_status_code=~\"5..\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n            )\n        )\n     / \n        sum by (operation) (\n            label_join(\n                rate(http_server_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n            )\n        )\n    ) or (0 * \n        sum by (operation) (\n            label_join(\n                rate(http_server_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n            )\n        )\n)\n\nor\n\n(\n        sum by (operation) (\n            label_join(\n                rate(http_server_duration_milliseconds_count{job=\"$job\", http_status_code=~\"5..\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_method\",\n                \"http_route\"\n            )\n        )\n     / \n        sum by (operation) (\n            label_join(\n                rate(http_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_method\",\n                \"http_route\"\n            )\n        )\n    ) or (0 * \n        sum by (operation) (\n            label_join(\n                rate(http_server_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_method\",\n                \"http_route\"\n            )\n        )\n)",
              "hide": false,
              "instant": false,
              "interval": "60s",
              "legendFormat": "{{operation}}",
              "range": true,
              "refId": "ERR_PCT"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "expr": "histogram_quantile(\n     0.99,\n        sum by (le, operation) (\n            label_join(\n            rate(http_server_request_duration_seconds_bucket{job=\"$job\"}[5m]),\n            \"operation\",\n            \" \",\n            \"http_request_method\",\n            \"http_route\"\n            )\n        )\n)\n\nor \n\nhistogram_quantile(\n     0.99,\n        sum by (le, operation) (\n            label_join(\n            rate(http_server_duration_milliseconds_bucket{job=\"$job\"}[5m]),\n            \"operation\",\n            \" \",\n            \"http_method\",\n            \"http_route\"\n            )\n        )\n)\n    ",
              "hide": false,
              "instant": false,
              "interval": "60s",
              "legendFormat": "{{operation}}",
              "range": true,
              "refId": "Duration"
            }
          ],
          "title": "HTTP Operations",
          "transformations": [
            {
              "id": "timeSeriesTable",
              "options": {
                "Duration": {
                  "timeField": "Time"
                },
                "ERR_PCT": {
                  "timeField": "Time"
                },
                "RPS": {
                  "timeField": "Time"
                }
              }
            },
            {
              "id": "joinByField",
              "options": {
                "byField": "operation",
                "mode": "outer"
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "includeByName": {},
                "indexByName": {
                  "Trend #Duration": 1,
                  "Trend #ERR_PCT": 2,
                  "Trend #RPS": 3,
                  "operation": 0
                },
                "renameByName": {
                  "Trend #Duration": "Duration (p99)",
                  "Trend #ERR_PCT": "Error",
                  "Trend #RPS": "Rate",
                  "operation": "Operation"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 15
          },
          "id": 28,
          "panels": [],
          "title": "Outbound Services and Databases",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "description": "HTTP calls made by the service based on the `http.client.request.duration` metric.\n\nCalls broken done by remote `server.address` and by `http.request.method`.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpclientrequestduration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "noValue": "No HTTP call",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration (P99)"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Rate"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "reqps"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Error"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percentunit"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "id": 23,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "\nsum by (outbound_service) (\n        label_join(\n            rate(http_client_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]),\n            \"outbound_service\",\n            \" \",\n            \"server_address\",\n            \"http_request_method\",\n            \"url_template\"\n        )\n)\n\nor\n\nsum by (outbound_service) (\n        label_join(\n            rate(http_client_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]),\n            \"outbound_service\",\n            \" \",\n            \"server_address\",\n            \"http_method\",\n            \"url_template\"\n        )\n)",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "interval": "60s",
              "legendFormat": "{{server_address}} {{http_request_method}} {{url_template}}",
              "range": true,
              "refId": "RPS",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${prometheus_datasource}"
              },
              "editorMode": "code",
              "expr": "(\n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_request_duration_seconds_count{job=\"$job\", http_response_status_code=~\"5..\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_request_method\",\n                \"url_template\"\n            )\n        )\n     / \n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_request_method\",\n                \"url_template\"\n            )\n        )\n    ) or (0 * \n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_request_duration_seconds_count{job=\"$job\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_request_method\",\n                \"url_template\"\n            )\n        )\n)\n\nor\n\n(\n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_duration_milliseconds_count{job=\"$job\", http_status_code=~\"5..\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_method\",\n                \"url_template\"\n            )\n        )\n     / \n        sum by (outbound_service) (\n            label_join(\n                rate(hhttp_client_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_method\",\n                \"url_template\"\n            )\n        )\n    ) or (0 * \n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_duration_milliseconds_count{job=\"$job\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_method\",\n                \"url_template\"\n            )\n        )\n)",
              "hide": false,
              "instant": false,
              "interval": "60s",
              "legendFormat": "{{server_address}} {{http_request_method}} {{url_template}}",
              "range": true,
              "refId": "ERR_PCT"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "expr": "\nhistogram_quantile(\n    0.99,\n    sum by (le, outbound_service) (\n        label_join(\n        rate(http_client_request_duration_seconds_bucket{job=\"$job\"}[5m]),\n        \"outbound_service\",\n        \" \",\n        \"server_address\",\n        \"http_request_method\",\n        \"url_template\"\n        )\n    )\n)\n\nor \n\nhistogram_quantile(\n    0.99,\n    sum by (le, outbound_service) (\n        label_join(\n        rate(http_client_duration_milliseconds_bucket{job=\"$job\"}[5m]),\n        \"outbound_service\",\n        \" \",\n        \"server_address\",\n        \"http_method\",\n        \"url_template\"\n        )\n    )\n)",
              "hide": false,
              "instant": false,
              "interval": "60s",
              "legendFormat": "{{server_address}} {{http_request_method}} {{url_template}}",
              "range": true,
              "refId": "DURATION"
            }
          ],
          "title": "Outbound HTTP Services",
          "transformations": [
            {
              "id": "timeSeriesTable",
              "options": {
                "Duration": {
                  "timeField": "Time"
                },
                "ERR_PCT": {
                  "timeField": "Time"
                },
                "RPS": {
                  "timeField": "Time"
                }
              }
            },
            {
              "id": "joinByField",
              "options": {
                "byField": "outbound_service",
                "mode": "outer"
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "includeByName": {},
                "indexByName": {
                  "Trend #DURATION": 1,
                  "Trend #ERR_PCT": 2,
                  "Trend #RPS": 3,
                  "outbound_service": 0
                },
                "renameByName": {
                  "Trend #DURATION": "Duration (P99)",
                  "Trend #Duration": "Duration (p99)",
                  "Trend #ERR_PCT": "Error",
                  "Trend #RPS": "Rate",
                  "operation": "Operation",
                  "outbound_service": "Service"
                }
              }
            }
          ],
          "type": "table"
        }
      ],
      "preload": false,
      "refresh": "30s",
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": [
          {
            "allowCustomValue": false,
            "current": {
              "text": "Prometheus",
              "value": "todoapp-metrics"
            },
            "description": "OpenTelemetry metrics. \nSend metrics using the Prometheus OTLP endpoint activating `keep_identifying_resource_attributes` and resource attribute promotion (aka `promote_resource_attributes`) including `service.name`, service.namespace`, `service.instance.id`, and `deployment.environment.name`",
            "includeAll": false,
            "label": "Metrics",
            "name": "prometheus_datasource",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "type": "datasource"
          },
          {
            "allowCustomValue": false,
            "current": {
              "text": "Jaeger",
              "value": "todoapp-traces"
            },
            "description": "OpenTelemetry traces",
            "includeAll": false,
            "label": "Traces",
            "name": "jaeger_datasource",
            "options": [],
            "query": "jaeger",
            "refresh": 1,
            "regex": "",
            "type": "datasource"
          },
          {
            "current": {
              "text": "todoui-thymeleaf",
              "value": "todoui-thymeleaf"
            },
            "datasource": {
              "type": "prometheus",
              "uid": "todoapp-metrics"
            },
            "definition": "label_values(job)",
            "description": "",
            "hide": 1,
            "includeAll": true,
            "label": "job",
            "name": "job",
            "options": [],
            "query": {
              "qryType": 1,
              "query": "label_values(job)",
              "refId": "PrometheusVariableQueryEditor-VariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "sort": 1,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "APM Dashboard",
      "uid": "febljk0a32qyoa",
      "version": 1
    }
  Demo_Dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 1,
      "id": 2,
      "links": [],
      "panels": [
        {
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 21,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "This dashboard shows RED metrics for the selected service, as generated by the spanmetrics connector in the OpenTelemetry Collector.\nIf the selected service emits logs, the logs will also be displayed.\nCustom metrics generated by some services are also displayed. \n<br/>\nChart panels may require 5 minutes after the Demo is started before rendering data.",
            "mode": "html"
          },
          "pluginVersion": "12.1.0",
          "title": "",
          "type": "text"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 14,
          "panels": [],
          "title": "Spanmetrics (RED metrics)",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "reqps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 4
          },
          "id": 12,
          "interval": "2m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "expr": "sum by (span_name) (rate(traces_span_metrics_duration_milliseconds_count{job=\"$job\",span_name=~\".*(GET|POST|PUT|DELETE).*\"}[$__rate_interval]))",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Requests Rate by Span Name",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 4
          },
          "id": 10,
          "interval": "2m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "expr": "sum by (span_name) (rate(traces_span_metrics_calls_total{status_code=\"STATUS_CODE_ERROR\", job=\"${job}\"}[$__rate_interval]))",
              "interval": "",
              "legendFormat": "{{ span_name }}",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Error Rate by Span Name",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "dtdurationms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 4
          },
          "id": 2,
          "interval": "2m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "histogram_quantile(0.50, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=\"$job\",span_name=~\".*(GET|POST|PUT|DELETE).*\"}[$__rate_interval])) by (le, span_name))",
              "legendFormat": "{{span_name}}",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Average Duration by Span Name",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 12
          },
          "id": 23,
          "panels": [],
          "title": "Service Dependency",
          "type": "row"
        },
        {
          "datasource": {
            "type": "jaeger",
            "uid": "todoapp-traces"
          },
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 22,
          "options": {
            "edges": {
              "mainStatUnit": "requests"
            },
            "layoutAlgorithm": "layered",
            "nodes": {
              "arcs": [],
              "mainStatUnit": ""
            },
            "zoomMode": "cooperative"
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "jaeger",
                "uid": "todoapp-traces"
              },
              "queryType": "dependencyGraph",
              "refId": "A"
            }
          ],
          "title": "Service Dependency",
          "type": "nodeGraph"
        }
      ],
      "preload": false,
      "refresh": "auto",
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "text": "todoui-thymeleaf",
              "value": "todoui-thymeleaf"
            },
            "datasource": {
              "type": "prometheus",
              "uid": "todoapp-metrics"
            },
            "definition": "label_values(job)",
            "hide": 1,
            "includeAll": true,
            "label": "job",
            "name": "job",
            "options": [],
            "query": {
              "qryType": 1,
              "query": "label_values(job)",
              "refId": "PrometheusVariableQueryEditor-VariableQuery"
            },
            "refresh": 1,
            "regex": "",
            "sort": 1,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Demo Dashboard",
      "uid": "W2gX2zHVk",
      "version": 1
    }
  Spanmetrics_Demo_Dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "description": "Spanmetrics way of demo application view.",
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 3,
      "links": [],
      "panels": [
        {
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 26,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "This dashboard uses RED metrics generated for all services by the spanmetrics connector configured in the OpenTelemetry Collector.\n<br>\nChart panels may require 5 minutes after the Demo is started before rendering data.",
            "mode": "html"
          },
          "pluginVersion": "12.1.0",
          "title": "",
          "type": "text"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 24,
          "panels": [],
          "title": "Service Level - Throughput and Latencies",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-BlYlRd"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": 0
                  },
                  {
                    "color": "green",
                    "value": 2
                  },
                  {
                    "color": "#EAB839",
                    "value": 64
                  },
                  {
                    "color": "orange",
                    "value": 128
                  },
                  {
                    "color": "red",
                    "value": 256
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 3
          },
          "id": 2,
          "interval": "5m",
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7,histogram_quantile(0.50, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__rate_interval])) by (le,job)))",
              "format": "time_series",
              "hide": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{service_name}}-quantile_0.50",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7,histogram_quantile(0.95, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__range])) by (le,job)))",
              "hide": false,
              "instant": true,
              "interval": "",
              "legendFormat": "{{service_name}}",
              "range": false,
              "refId": "B"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "histogram_quantile(0.99, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__rate_interval])) by (le,job))",
              "hide": true,
              "interval": "",
              "legendFormat": "quantile99",
              "range": true,
              "refId": "C"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "histogram_quantile(0.999, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__rate_interval])) by (le,job))",
              "hide": true,
              "interval": "",
              "legendFormat": "quantile999",
              "range": true,
              "refId": "D"
            }
          ],
          "title": "Top 3x3 - Service Latency - quantile95",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-BlYlRd"
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "super-light-blue",
                    "value": 1
                  },
                  {
                    "color": "#EAB839",
                    "value": 2
                  },
                  {
                    "color": "red",
                    "value": 10
                  }
                ]
              },
              "unit": "reqps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 3
          },
          "id": 4,
          "interval": "5m",
          "options": {
            "displayMode": "lcd",
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "maxVizHeight": 300,
            "minVizHeight": 10,
            "minVizWidth": 0,
            "namePlacement": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "sizing": "auto",
            "text": {},
            "valueMode": "color"
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7,sum by (job) (rate(traces_span_metrics_calls_total{job=~\"$job\", span_name=~\"$span_name\"}[$__range])))",
              "format": "time_series",
              "instant": true,
              "interval": "",
              "legendFormat": "{{service_name}}",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Top 7 Services Mean Rate over Range",
          "type": "bargauge"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-reds"
              },
              "decimals": 4,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 15
                  }
                ]
              },
              "unit": "reqps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 9
          },
          "id": 15,
          "interval": "5m",
          "options": {
            "displayMode": "lcd",
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "maxVizHeight": 300,
            "minVizHeight": 10,
            "minVizWidth": 0,
            "namePlacement": "auto",
            "orientation": "vertical",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "sizing": "auto",
            "text": {},
            "valueMode": "color"
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7,sum(rate(traces_span_metrics_calls_total{status_code=\"STATUS_CODE_ERROR\",job=~\"$job\", span_name=~\"$span_name\"}[$__range])) by (job))",
              "instant": true,
              "interval": "",
              "legendFormat": "{{service_name}}",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Top 7 Services Mean ERROR Rate over Range",
          "type": "bargauge"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 15
          },
          "id": 14,
          "panels": [],
          "title": "span_names Level - Throughput",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "reqps"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "bRate"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "lcd",
                      "type": "gauge"
                    }
                  },
                  {
                    "id": "color",
                    "value": {
                      "mode": "continuous-BlYlRd"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "eRate"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "lcd",
                      "type": "gauge"
                    }
                  },
                  {
                    "id": "color",
                    "value": {
                      "mode": "continuous-RdYlGr"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Error Rate"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 663
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Rate"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 667
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Service"
                },
                "properties": [
                  {
                    "id": "custom.width"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "id": 22,
          "interval": "5m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7, sum(rate(traces_span_metrics_calls_total{job=~\"$job\", span_name=~\"$span_name\"}[$__range])) by (span_name,job)) ",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "Rate"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7, sum(rate(traces_span_metrics_calls_total{status_code=\"STATUS_CODE_ERROR\",job=~\"$job\", span_name=~\"$span_name\"}[$__range])) by (span_name,job))",
              "format": "table",
              "hide": false,
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "Error Rate"
            }
          ],
          "title": "Top 7 span_names and Errors  (APM Table)",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {
                "byField": "span_name"
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time 1": true,
                  "Time 2": true
                },
                "indexByName": {},
                "renameByName": {
                  "Value #Error Rate": "Error Rate",
                  "Value #Rate": "Rate",
                  "service_name 1": "Rate in Service",
                  "service_name 2": "Error Rate in Service"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "bRate",
                "mode": "reduceRow",
                "reduce": {
                  "include": [
                    "Rate"
                  ],
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "eRate",
                "mode": "reduceRow",
                "reduce": {
                  "include": [
                    "Error Rate"
                  ],
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Error Rate": true,
                  "Rate": true,
                  "bRate": false
                },
                "indexByName": {
                  "Error Rate": 4,
                  "Error Rate in Service": 6,
                  "Rate": 1,
                  "Rate in Service": 5,
                  "bRate": 2,
                  "eRate": 3,
                  "span_name": 0
                },
                "renameByName": {
                  "Rate in Service": "Service",
                  "bRate": "Rate",
                  "eRate": "Error Rate",
                  "span_name": "span_name Name"
                }
              }
            },
            {
              "id": "sortBy",
              "options": {
                "fields": {},
                "sort": [
                  {
                    "desc": true,
                    "field": "Rate"
                  }
                ]
              }
            }
          ],
          "type": "table"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 27
          },
          "id": 20,
          "panels": [],
          "title": "span_name Level - Latencies",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-BlYlRd"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": 0
                  },
                  {
                    "color": "green",
                    "value": 2
                  },
                  {
                    "color": "#EAB839",
                    "value": 64
                  },
                  {
                    "color": "orange",
                    "value": 128
                  },
                  {
                    "color": "red",
                    "value": 256
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "id": 25,
          "interval": "5m",
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7,histogram_quantile(0.50, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__rate_interval])) by (le,job)))",
              "format": "time_series",
              "hide": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{service_name}}-quantile_0.50",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7,histogram_quantile(0.95, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__range])) by (le,span_name)))",
              "hide": false,
              "instant": true,
              "interval": "",
              "legendFormat": "{{span_name}}",
              "range": false,
              "refId": "B"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "histogram_quantile(0.99, sum(rate(traces_span_metrics_duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__rate_interval])) by (le,job))",
              "hide": true,
              "interval": "",
              "legendFormat": "quantile99",
              "range": true,
              "refId": "C"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "histogram_quantile(0.999, sum(rate(duration_milliseconds_bucket{job=~\"$job\", span_name=~\"$span_name\"}[$__rate_interval])) by (le,job))",
              "hide": true,
              "interval": "",
              "legendFormat": "quantile999",
              "range": true,
              "refId": "D"
            }
          ],
          "title": "Top 3x3 - span_name Latency - quantile95",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "todoapp-metrics"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-BlYlRd"
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 28
          },
          "id": 10,
          "interval": "5m",
          "options": {
            "displayMode": "lcd",
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "maxVizHeight": 300,
            "minVizHeight": 10,
            "minVizWidth": 0,
            "namePlacement": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "sizing": "auto",
            "valueMode": "color"
          },
          "pluginVersion": "12.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "webstore-metrics"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "topk(7, sum by (span_name,job)(increase(traces_span_metrics_duration_milliseconds_sum{job=~\"${job}\", span_name=~\"$span_name\"}[5m]) / increase(traces_span_metrics_duration_milliseconds_count{job=~\"${job}\",span_name=~\"$span_name\"}[5m\n])))",
              "instant": true,
              "interval": "",
              "legendFormat": "{{span_name}} [{{service_name}}]",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Top 7 Highest Endpoint Latencies  Mean Over Range ",
          "type": "bargauge"
        }
      ],
      "preload": false,
      "refresh": "auto",
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": ".*",
            "current": {
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": {
              "type": "prometheus",
              "uid": "webstore-metrics"
            },
            "definition": "query_result(sum ({__name__=~\".*traces_span_metrics_calls_total\",service_name=~\"$service\"})  by (span_name))",
            "includeAll": true,
            "multi": true,
            "name": "span_name",
            "options": [],
            "query": {
              "query": "query_result(sum ({__name__=~\".*traces_span_metrics_calls_total\",service_name=~\"$service\"})  by (span_name))",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "/.*span_name=\"(.*)\".*/",
            "type": "query"
          },
          {
            "current": {
              "text": "All",
              "value": "$__all"
            },
            "definition": "label_values(job)",
            "includeAll": true,
            "name": "job",
            "options": [],
            "query": {
              "qryType": 1,
              "query": "label_values(job)",
              "refId": "PrometheusVariableQueryEditor-VariableQuery"
            },
            "refresh": 1,
            "regex": "",
            "sort": 1,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Spanmetrics Demo Dashboard",
      "uid": "W2gX2zHVk48",
      "version": 1
    }
